@use 'sass:map'
@use 'sass:math'
@use '../../styles/settings'
@use '../../styles/tools'

@mixin make-container($padding-x: settings.$container-padding-x)
  width: 100%
  padding: $padding-x
  margin-right: auto
  margin-left: auto

// For each breakpoint, define the maximum width of the container in a media query
@mixin make-container-max-widths($max-widths: settings.$container-max-widths, $breakpoints: settings.$grid-breakpoints)
  @each $breakpoint, $container-max-width in $max-widths
    @include tools.media-breakpoint-up($breakpoint, $breakpoints)
      max-width: $container-max-width

@mixin make-row($gap: settings.$grid-gutter)
  display: flex
  flex-wrap: wrap
  flex: 1 1 auto
  gap: $gap

@function col-span-width($size, $columns: settings.$grid-columns, $gap: settings.$grid-gutter)
  @return calc((#{$size} * (100% - #{$columns - 1} * #{$gap}) / #{$columns}) + #{$size - 1} * #{$gap})

@function col-span-offset($size, $columns: settings.$grid-columns, $gap: settings.$grid-gutter)
  @return calc((#{$size} * (100% - #{$columns - 1} * #{$gap}) / #{$columns}) + #{$size} * #{$gap})

@mixin make-col($size, $columns: settings.$grid-columns, $gap: settings.$grid-gutter)
  flex: 0 0 col-span-width($size, $columns, $gap)
  min-width: 0

@mixin make-col-offset($size, $columns: settings.$grid-columns, $gap: settings.$grid-gutter)
  margin-inline-start: col-span-offset($size, $columns, $gap)

@mixin make-grid-columns($columns: settings.$grid-columns, $breakpoints: settings.$grid-breakpoints)
  // Common properties for all breakpoints
  %grid-column
    width: 100%

  // Define column classes for each breakpoint
  @each $breakpoint in map.keys($breakpoints)
    $infix: tools.breakpoint-infix($breakpoint, $breakpoints)
    // Allow columns to stretch full width below their breakpoints
    @for $i from 1 through $columns
      .v-col#{$infix}-#{$i}
        @extend %grid-column
    .v-col#{$infix},
    .v-col#{$infix}-auto
      @extend %grid-column

    @include tools.media-breakpoint-up($breakpoint, $breakpoints)
      // Provide basic `.col-{bp}` classes for equal-width flexbox columns
      .v-col#{$infix}
        flex-basis: 0
        flex-grow: 1
        max-width: 100%
      .v-col#{$infix}-auto
        flex: 0 0 auto
        width: auto
        max-width: 100% // Reset earlier grid tiers

      // Standard columns with default gap
      @for $i from 1 through $columns
        :where(.v-row.v-row--density-default) > .v-col#{$infix}-#{$i}
          @include make-col($i, $columns, settings.$grid-gutter)

      // Dense row columns
      @for $i from 1 through $columns
        .v-row--density-comfortable > .v-col#{$infix}-#{$i}
          @include make-col($i, $columns, settings.$form-grid-gutter)

      // No-gutters columns
      @for $i from 1 through $columns
        .v-row--density-compact > .v-col#{$infix}-#{$i}
          @include make-col($i, $columns, 0px)

      // Standard offsets with default gap
      @for $i from 0 through $columns - 1
        @if not ($infix == "" and $i == 0)
          // Avoid emitting useless .offset-0
          :where(.v-row.v-row--density-default) > .offset#{$infix}-#{$i}
            @include make-col-offset($i, $columns, settings.$grid-gutter)

      // Dense row offsets
      @for $i from 0 through $columns - 1
        @if not ($infix == "" and $i == 0)
          .v-row--density-comfortable > .offset#{$infix}-#{$i}
            @include make-col-offset($i, $columns, settings.$form-grid-gutter)

      // No-gutters offsets
      @for $i from 0 through $columns - 1
        @if not ($infix == "" and $i == 0)
          .v-row--density-compact > .offset#{$infix}-#{$i}
            @include make-col-offset($i, $columns, 0px)
