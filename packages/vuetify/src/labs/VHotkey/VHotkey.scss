@use '../../styles/tools';
@use './variables' as *;


@include tools.layer('components') {
 .v-hotkey {
    align-items: center;
    display: inline-flex;
    gap: $hotkey-gap;
    vertical-align: middle;
    line-height: $hotkey-line-height;

    &--disabled {
      opacity: $hotkey-disabled-opacity;
    }

    &__key-icon {
      .v-icon {
        max-width: $hotkey-icon-max-width;
        min-width: unset;
      }
    }

    &__divider {
      align-items: center;
      display: inline-flex;
      opacity: $hotkey-divider-opacity;
      font-size: $hotkey-divider-font-size;
    }

    &__combination {
      align-self: baseline;
      display: flex;
      gap: $hotkey-combination-gap;
    }

    &__key.v-kbd {
      min-height: unset;
      font-size: $hotkey-font-size;
      line-height: $hotkey-line-height;
      padding: $hotkey-padding;
      min-width: $hotkey-min-width;

      // Apply variant styles to individual VKbd elements
      @include tools.variant($hotkey-variants...);
    }

    &__key-symbol.v-kbd {
      line-height: normal;
      font-size: 1em;
    }

    // Variant-specific overrides for individual VKbd elements
    &--variant-elevated {
      .v-hotkey__key.v-kbd {
        @include tools.elevation($hotkey-elevation);
      }
    }

    &--variant-flat {
      .v-hotkey__key.v-kbd {
        @include tools.elevation(0);
      }
    }

    &--variant-outlined {
      .v-hotkey__key.v-kbd {
        @include tools.elevation(0);
        background: none;
      }
    }

    &--variant-text {
      .v-hotkey__key.v-kbd {
        background: transparent !important;
        border: none !important;
        @include tools.elevation(0);
      }
    }

    &--variant-tonal {
      .v-hotkey__key.v-kbd {
        border: unset;
        box-shadow: unset;
      }
    }

    &--inline {
      align-items: baseline;
      max-height: 1lh;
      vertical-align: baseline;
      font-size: $hotkey-inline-font-size;
      line-height: $hotkey-inline-line-height;

      .v-hotkey {
        &__key-symbol.v-kbd,
        &__key-text.v-kbd {
          align-self: baseline;
        }
        &__combination {
          height: inherit;
          align-self: baseline;
          display: flex;
        }

        &__divider {
          font-size: $hotkey-inline-divider-font-size;
        }

        &__key.v-kbd {
          font-size: $hotkey-inline-font-size;
          line-height: $hotkey-inline-line-height;
          padding: $hotkey-inline-padding;
          min-width: $hotkey-inline-min-width;
        }

        &__key-icon {
          align-self: stretch;
          &.v-kbd {
            padding: {
              top: 0;
              bottom: 0;
            }
          }
          .v-icon {
            width: min-content;
            min-width: fit-content;
            max-height: $hotkey-inline-icon-max-height;
            .v-icon__svg {
              height: 100%;
              // Safari fix
              width: unset;
            }
          }
        }
      }
    }

    // Combined variant styles - following MDN pattern with nested kbd elements
    &--combined {
      .v-hotkey__combined-wrapper {
        // The outer kbd wrapper gets all the visual styling
        display: inline-flex;
        align-items: center;
        gap: $hotkey-combination-gap;
        padding: $hotkey-padding;
        background: unset;

        // Nested kbd elements have minimal styling - just content
        .v-hotkey__key--nested {
          // Reset all visual styling for nested kbd elements
          background: none;
          border: none;
          padding: 0;
          margin: 0;
          font: inherit;
          color: inherit;
          display: inline-flex;
          align-items: center;
          min-width: auto;
          min-height: auto;

          // Icon styling within nested kbd
          .v-icon {
            max-width: $hotkey-icon-max-width;
            min-width: unset;
          }
        }

        .v-hotkey__divider {
          // Dividers within combined variant
          opacity: $hotkey-divider-opacity;
          font-size: inherit;
        }

        .v-hotkey__combination {
          display: inline-flex;
          align-items: center;
          gap: $hotkey-combination-gap;
        }
      }

      // Inline combined variant
      &.v-hotkey--inline {
        .v-hotkey__combined-wrapper {
          font-size: $hotkey-inline-font-size;
          line-height: $hotkey-inline-line-height;
          padding: $hotkey-inline-padding;

          .v-hotkey__key--nested {
            .v-icon {
              max-height: $hotkey-inline-icon-max-height;
              .v-icon__svg {
                height: 100%;
                width: unset;
              }
            }
          }

          .v-hotkey__divider {
            font-size: $hotkey-inline-divider-font-size;
          }
        }
      }

      // Combined variant has its own default styling (elevated-like)
      .v-hotkey__combined-wrapper {
        box-shadow: unset;
      }
    }
  }

  // Screen reader only content
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }
}
