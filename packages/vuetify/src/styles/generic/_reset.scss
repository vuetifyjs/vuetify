@use '../settings';
@use '../tools';

@if (settings.$reset) {
  @include tools.layer('reset') {
    html {
      box-sizing: border-box;
      /* Prevent adjustments of font size after orientation changes in iOS */
      -webkit-text-size-adjust: 100%;
      tab-size: 4;
      margin: 0;
    }

    *,
    ::before,
    ::after {
      background-repeat: no-repeat;
      box-sizing: inherit;
    }

    ::before,
    ::after {
      text-decoration: inherit;
      vertical-align: inherit;
    }


    input {
      border-radius: 0;
    }

    /* Replace pointer cursor in disabled elements */
    [disabled] {
      cursor: default;
    }

    [type="number"]::-webkit-inner-spin-button,
    [type="number"]::-webkit-outer-spin-button {
      /* Correct the cursor style of increment and decrement buttons in Chrome */
      height: auto;
    }

    [type="search"] {
      -webkit-appearance: textfield; /* Correct the odd appearance in Chrome and Safari */
      outline-offset: -2px; /* Correct the outline style in Safari */
    }

    [type="search"]::-webkit-search-cancel-button,
    [type="search"]::-webkit-search-decoration {
      /* Remove the inner padding in Chrome and Safari on macOS */
      -webkit-appearance: none;
    }

    button,
    input,
    optgroup,
    select,
    textarea {
      font: inherit;
    }

    optgroup {
      /* Restore the font weight unset by the previous rule */
      font-weight: bold;
    }

    /* Apply cursor pointer to button elements */
    button,
    [type="button"],
    [type="reset"],
    [type="submit"],
    [role="button"] {
      cursor: pointer;
      color: inherit;
    }

    /* Specify the progress cursor of updating elements */
    [aria-busy="true"] {
      cursor: progress;
    }

    /* Specify the pointer cursor of trigger elements */
    [aria-controls] {
      cursor: pointer;
    }

    /* Specify the unstyled cursor of disabled, not-editable, or otherwise inoperable elements */
    [aria-disabled="true"] {
      cursor: default;
    }
  }
}
